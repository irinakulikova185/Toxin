mixin dropdown(params= {initial_value: "", items: [], visible: false, clearBtn: false, controlBtns: false, type: ""})
  -
    const {initial_value, items, visible, clearBtn, controlBtns, type} = params
    let listClassName = "dropdown__list"
    listClassName += visible ? " dropdown__list_visible" : ""
    let clearBtnClassName = "dropdown__clear"
    clearBtnClassName +=clearBtn ? " dropdown__clear_visible" : ""
  div&attributes({class: "dropdown", "data-type" : type})
    button&attributes({class: "dropdown__button", "data-placeholder": initial_value})= initial_value
    ul(class = listClassName)
      each item in items
        li.dropdown__item
          span.dropdown__prop= item
          .dropdown__counter 
            button&attributes({class: "dropdown__decrement-button", disabled: ""}) 
            div&attributes({class: "dropdown__count", "data-property": `${item}`}) 0
            button.dropdown__increment-button
      if controlBtns      
        li.dropdown__item_controlling
          span(class = clearBtnClassName) очистить
          span.dropdown__apply применить       
      

